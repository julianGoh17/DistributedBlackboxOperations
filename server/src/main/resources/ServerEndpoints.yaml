openapi: "3.0.0"
info:
  title: Server Endpoints
  version: 1.0.0
paths:
  ####################
  # Client Endpoints #
  ####################
  /client:
    post:
      operationId: postMessage
      description: Send a message to be stored in the Server
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostedMessage"
      responses:
        '200':
          description: Successfully sent message to the Server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageIDResponse"

  /client/{message_id}:
    get:
      operationId: getMessage
      description: Retrieve the message stored in the Server for a given UUID
      parameters:
        - name: message_id
          in: path
          description: The UUID of the message
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
        '504':
          description: Operation timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      operationId: deleteMessage
      description: Delete message stored in the Server for a given UUID
      parameters:
        - name: message_id
          in: path
          description: The UUID of the message
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageIDResponse"
        '404':
          description: Could not find message with UUID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '504':
          description: Operation timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    patch:
      operationId: patchMessage
      description: Patch message content stored in the Server for a given UUID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      parameters:
        - name: message_id
          in: path
          description: The UUID of the message
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageIDResponse"
        '404':
          description: Could not find message with UUID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '504':
          description: Operation timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  ########################
  # Coordinate Endpoints #
  ########################
  /coordinate/mark:
    post:
      operationId: "markServer"
      description: Allows a user to mark the Server with a label
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                serverLabel:
                  type: string
      responses:
        '202':
          description: Successfully labeled the Server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerStatus"
        '504':
          description: Timed out trying to label the Server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /coordinate/message:
    post:
      operationId: "sendCoordinationMessage"
      description: Another Server sends a coordination message to this Server which will land in the Coordination queue.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Successfully sent coordination message
        '504':
          description: Sending coordination message timed out
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
components:
  schemas:
    PostedMessage:
      type: object
      properties:
        message:
          type: object
      required:
        - message
    MessageIDResponse:
      type: object
      properties:
        messageId:
          type: string
    MessageResponse:
      type: object
      properties:
        messageId:
          type: string
        message:
          type: object
    ErrorResponse:
      type: object
      properties:
        statusCode:
          type: integer
        error:
          type: string
    ServerStatus:
      type: object
      properties:
        serverID:
          type: string
        serverLabel:
          type: string